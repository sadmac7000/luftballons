.DEFAULT_GOAL := all

CLANGFLAGS = --std=gnu99
CFLAGS = -g -Wall -Wextra -DGL_GLEXT_PROTOTYPES -isystem/usr/include/collada-dom -isystem/usr/include/collada-dom/1.4
CC = gcc
CXX = g++
LIBTOOL = libtool --silent
LTCC = $(LIBTOOL) --mode=compile $(CC)
LTCXX = $(LIBTOOL) --mode=compile $(CXX)
LINK = $(CC)
LTLINK = $(LIBTOOL) --mode=link $(LINK)
RM = rm
ifneq ($(QUIET),0)
override QUIET = @echo '   ' $1 $(if $2,$2,$@);$($1)
else
override QUIET = $($1)
endif

ifdef GCOV
GCOV_FLAGS = -fprofile-arcs -ftest-coverage
endif

define SET_DEPS =
$(1): $$($(1)_OBJS)
endef

define LIB_FILE =
lib$(1).la: $(1)
all: lib$(1).la
endef

$(foreach prog,$(TEST_PROGS),$(eval $(call SET_DEPS,$(prog))))
$(foreach prog,$(PROGS),$(eval $(call SET_DEPS,$(prog))))
$(foreach lib,$(LIBS),$(eval $(call SET_DEPS,$(lib))))

$(foreach file,$(wildcard *.c),$(eval $(shell $(CC) -MM $(file) | sed 's/\\//')))
$(foreach file,$(wildcard *.h),$(eval $(shell $(CC) -MM $(file) | sed 's/\\//')))
$(foreach file,$(wildcard *.cc),$(eval $(shell $(CXX) -MM $(file) | sed 's/\\//')))

$(foreach lib,$(LIBS),$(eval $(call LIB_FILE,$(lib))))

$(TEST_PROGS):
	$(call QUIET,LINK) $(CFLAGS) $($@_LINK) $(GCOV_FLAGS) -o $@ $^

$(PROGS):
	$(call QUIET,LINK) $(CFLAGS) $($@_LINK) $(GCOV_FLAGS) -o $@ $^

.PHONY: $(LIBS)
$(LIBS):
	$(call QUIET,LTLINK) -rpath /usr/lib -version-info $($@_SONAME) $(CFLAGS) $($@_LINK) $(GCOV_FLAGS) O -o lib$@.la $^

.PHONY: check
check: $(TEST_PROGS)
	@echo
	@echo "Running checks"
	@echo
	@$(foreach prog,$^,./$(prog) && echo &&) echo "All checks completed successfully"

%.o: %.c
	$(call QUIET,CC) $(CLANGFLAGS) $(CFLAGS) $(GCOV_FLAGS) -c -o $@ $<

%.o: %.cc
	$(call QUIET,CXX) $(CFLAGS) $(GCOV_FLAGS) -fpermissive -c -o $@ $<

%.lo %.o: %.c
	$(call QUIET,LTCC) $(CLANGFLAGS) $(CFLAGS) $(GCOV_FLAGS) -c -o $@ $<

%.lo %.o: %.cc
	$(call QUIET,LTCXX) $(CFLAGS) $(GCOV_FLAGS) -fpermissive -c -o $@ $<

.PHONY: clean
clean:
	$(call QUIET,RM,\*.o) -f *.o
	$(call QUIET,RM,\*.lo) -f *.lo
	$(call QUIET,RM,\*.la) -f *.la
	$(call QUIET,RM,\*.gcda) -f *.gcda
	$(call QUIET,RM,\*.gcno) -f *.gcno
	$(call QUIET,RM,\*.gcov) -f *.gcov
	$(call QUIET,RM,$(TEST_PROGS)) -f $(TEST_PROGS)
	$(call QUIET,RM,$(PROGS)) -f $(PROGS)

.PHONY: all
all: $(PROGS)
