.DEFAULT_GOAL := all

PACKAGE_VERSION=0.0

libdir=/usr/lib
bindir=/usr/bin
incdir=/usr/include


CLANGFLAGS = --std=gnu99
CFLAGS = -g -Wall -Wextra -DGL_GLEXT_PROTOTYPES \
	 -isystem/usr/include/collada-dom \
	 -isystem/usr/include/collada-dom/1.4 -fvisibility=hidden \
	 -I../include -fvisibility=hidden
CC = gcc
CXX = g++
INSTALL = install
LIBTOOL = libtool --silent
LINK = $(CC)
RM = rm

LTCC = $(LIBTOOL) --mode=compile $(CC)
LTCXX = $(LIBTOOL) --mode=compile $(CXX)
LTLINK = $(LIBTOOL) --mode=link $(LINK)
LTINSTALL = $(LIBTOOL) --mode=install $(INSTALL)


ifneq ($(QUIET),0)
override QUIET = @echo '   ' $1 $(if $2,$2,$@);$($1)
else
override QUIET = $($1)
endif

ifdef GCOV
GCOV_FLAGS = -fprofile-arcs -ftest-coverage
endif

define SET_DEPS =
$(1): $$($(1)_OBJS) $$($(1)_DEPS)
endef

define LIB_FILE =
lib$(1).la: $(1)
all: lib$(1).la
endef

$(foreach prog,$(TEST_PROGS),$(eval $(call SET_DEPS,$(prog))))
$(foreach prog,$(PROGS),$(eval $(call SET_DEPS,$(prog))))
$(foreach prog,$(LTPROGS),$(eval $(call SET_DEPS,$(prog))))
$(foreach prog,$(NOINST_PROGS),$(eval $(call SET_DEPS,$(prog))))
$(foreach prog,$(NOINST_LTPROGS),$(eval $(call SET_DEPS,$(prog))))
$(foreach lib,$(LIBS),$(eval $(call SET_DEPS,$(lib))))

$(foreach file,$(wildcard *.c),$(eval $(shell $(CC) -MM $(file) | sed 's/\\//')))
$(foreach file,$(wildcard *.h),$(eval $(shell $(CC) -MM $(file) | sed 's/\\//')))
$(foreach file,$(wildcard *.cc),$(eval $(shell $(CXX) -MM $(file) | sed 's/\\//')))

$(foreach lib,$(LIBS),$(eval $(call LIB_FILE,$(lib))))

$(TEST_PROGS):
	$(call QUIET,LINK) $(CFLAGS) $($@_LINK) $(GCOV_FLAGS) -o $@ $($@_OBJS)

$(PROGS) $(NOINST_PROGS):
	$(call QUIET,LINK) $(CFLAGS) $($@_LINK) $(GCOV_FLAGS) -o $@ $($@_OBJS)

$(LTPROGS) $(NOINST_LTPROGS):
	$(call QUIET,LTLINK) $(CFLAGS) $($@_LINK) $(GCOV_FLAGS) -o $@ $($@_OBJS)

.PHONY: $(LIBS)
$(LIBS):
	$(call QUIET,LTLINK) -rpath $(libdir) -version-info $($@_SONAME) \
		$(CFLAGS) $($@_LINK) $(GCOV_FLAGS) O -o lib$@.la $^

.PHONY: check
check: $(TEST_PROGS)
	@echo
	@echo "Running checks"
	@echo
	@$(foreach prog,$^,./$(prog) && echo &&) \
		echo "All checks completed successfully"

%.o: %.c
	$(call QUIET,CC) $(CLANGFLAGS) $(CFLAGS) $(GCOV_FLAGS) -c -o $@ $<

%.o: %.cc
	$(call QUIET,CXX) $(CFLAGS) $(GCOV_FLAGS) -fpermissive -c -o $@ $<

%.lo %.o: %.c
	$(call QUIET,LTCC) $(CLANGFLAGS) $(CFLAGS) $(GCOV_FLAGS) -c -o $@ $<

%.lo %.o: %.cc
	$(call QUIET,LTCXX) $(CFLAGS) $(GCOV_FLAGS) -fpermissive -c -o $@ $<

.PHONY: clean
clean:
	$(call QUIET,RM,\*.o) -f *.o
	$(call QUIET,RM,\*.lo) -f *.lo
	$(call QUIET,RM,\*.la) -f *.la
	$(call QUIET,RM,\*.gcda) -f *.gcda
	$(call QUIET,RM,\*.gcno) -f *.gcno
	$(call QUIET,RM,\*.gcov) -f *.gcov
	$(call QUIET,RM,.libs) -rf .libs
	$(foreach prog, $(TEST_PROGS), $(call QUIET,RM,$(prog)) -f $(prog))
	$(foreach prog, $(PROGS), $(call QUIET,RM,$(prog)) -f $(prog))
	$(foreach prog, $(LTPROGS), $(call QUIET,RM,$(prog)) -f $(prog))
	$(foreach prog, $(NOINST_PROGS), $(call QUIET,RM,$(prog)) -f $(prog))
	$(foreach prog, $(NOINST_LTPROGS), $(call QUIET,RM,$(prog)) -f $(prog))
	$(foreach lib, $(LIBS), $(call QUIET,RM,lib$(lib).la) -f $(lib))

.PHONY: all
all: $(PROGS) $(LTPROGS) $(NOINST_PROGS) $(NOINST_LTPROGS) \
	$(TEST_PROGS) $(LIBS)

define DO_INSTALL
$(call QUIET,INSTALL,$(1)) -D -m $(3) $(1) $(2)/$(1)

endef

define DO_LTINSTALL
$(call QUIET,LTINSTALL,$(1)) -D -m $(3) $(1) $(2)/$(1)

endef

.PHONY: install
install: all
	$(foreach inc, $(INCLUDES), $(call DO_INSTALL,$(inc),$(incdir),0644))
	$(foreach prog, $(PROGS), $(call DO_INSTALL,$(prog),$(bindir),0755))
	$(foreach prog, $(LTPROGS), $(call DO_LTINSTALL,$(prog),$(bindir),0755))
	$(foreach lib, $(LIBS), $(call DO_LTINSTALL,lib$(lib).la,$(libdir),0644))
